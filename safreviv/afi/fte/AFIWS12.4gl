#-------------------------------------------------------------------------------
# File: ConsultaCurpRenapoService.4gl
# GENERATED BY fglwsdl 141859
#-------------------------------------------------------------------------------
# THIS FILE WAS GENERATED. DO NOT MODIFY.
#-------------------------------------------------------------------------------


IMPORT com
IMPORT xml


GLOBALS "AFIWS12.inc"
GLOBALS "AFIW07.inc"

MAIN
    DEFINE servicio     INTEGER
    DEFINE respuesta    INTEGER 
   
   CALL CreateConsultaPorCurpService() RETURNING servicio

   CALL com.WebServiceEngine.Start()

   DISPLAY("The server is listening.")

   WHILE TRUE
      #
      # Procesa cada request, regresa un entero que representa el estatus del request
      # el parametro -1 representa un valor infinito de espera
      #
      LET respuesta = com.WebServiceEngine.ProcessServices(-1)
      CASE respuesta
         WHEN 0
            --DISPLAY "Request processed." 
         WHEN -1
            DISPLAY "Timeout reached."
         WHEN -2
            DISPLAY "Disconnected from application server."
            EXIT PROGRAM   # The Application server has closed the connection
         WHEN -3
            DISPLAY "Client Connection lost."
         WHEN -4
            DISPLAY "Server interrupted with Ctrl-C."
         WHEN -10
            DISPLAY "Internal server error."
     END CASE

     IF int_flag<>0 THEN
        LET int_flag=0
        EXIT WHILE
     END IF     
   END WHILE
END MAIN

#-------------------------------------------------------------------------------
# Service: ConsultaCurpRenapoService
# Port:    ConsultaPorCurpServiceHttpSoap11Endpoint
#-------------------------------------------------------------------------------
#
# FUNCTION CreateConsultaPorCurpService
#   RETURNING soapstatus
#
FUNCTION CreateConsultaPorCurpService()
  DEFINE service      com.WebService
  DEFINE operation    com.WebOperation

  TRY
    # Create Web Service
    LET service = com.WebService.CreateWebService("ConsultaCurpRenapoService","http://efp.com.mx/saci")
    CALL service.setFeature("Soap1.1",TRUE)

    # Handle HTTP register methods
    CALL service.registerInputHttpVariable(ConsultaPorCurpHttpIn)
    CALL service.registerOutputHttpVariable(ConsultaPorCurpHttpOut)


    #
    # Operation: consultarPorCurp
    #

    # Publish Operation : consultarPorCurp
    LET operation = com.WebOperation.CreateDOCStyle("consultarPorCurp","consultarPorCurp",v_request,v_response)
    CALL service.publishOperation(operation,"urn:consultarPorCurp")


    #
    # Register Service
    #
    CALL com.WebServiceEngine.RegisterService(service)
    RETURN 0

  CATCH
    RETURN STATUS
  END TRY

END FUNCTION

FUNCTION consultarPorCurp()
   DEFINE v_num_intento    INTEGER
   DEFINE v_wsStatus         INTEGER
   
   INITIALIZE ns1consultarPorCurp.datos.* TO NULL

   IF v_request.datos.curp IS NOT NULL THEN
      LET v_num_intento = 0
   
      LET ns1consultarPorCurp.datos.cveCurp           = v_request.datos.curp
      LET ns1consultarPorCurp.datos.cveEntidadEmisora = ENTIDAD_EMISORA
      LET ns1consultarPorCurp.datos.direccionIp       = IP_CONSULTA
      LET ns1consultarPorCurp.datos.tipoTransaccion   = TIPO_TRANSACCION
      LET ns1consultarPorCurp.datos.usuario           = USUARIO
      LET ns1consultarPorCurp.datos.password          = PASSWORD

      LET ConsultaPorCurpService_ConsultaPorCurpServiceHttpSoap11EndpointEndpoint.Address.Uri = URL

      WHILE v_num_intento <= INTENTOS
         CALL consultarPorCurp_g() RETURNING v_wsStatus

         IF v_wsStatus == 0 THEN
           --Se ejecuto correctamente el WS
            LET v_response.return = ns1consultarPorCurpResponse.return
      
           EXIT WHILE
         ELSE
            IF v_num_intento = INTENTOS THEN
               LET v_response.return = "ERROR DE COMUNICACIÓN: ", wsError.description
               
            ELSE
               #si aun no se llega al numero maximo de intentos configurados se
               #incrementa el contador y se reintenta la peticion
               LET v_num_intento = v_num_intento + 1
            END IF
         END IF
      END WHILE
   ELSE
      LET v_response.return = "ERROR DE VALIDACIÓN: EL CAMPO DE CURP NO PUEDE SER NULO"
   END IF
END FUNCTION