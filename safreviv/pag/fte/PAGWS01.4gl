#-------------------------------------------------------------------------------
# File: PAGWS01Service.4gl
# GENERATED BY fglwsdl 101601
#-------------------------------------------------------------------------------
# THIS FILE WAS GENERATED. DO NOT MODIFY.
#-------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------
-- Modulo       => PAG                                                                    --
-- Programa     => PAGWS01.4gl                                                            --
-- Objetivo     => Componente que responde a la solicitud crezcamos juntos                --
--                 Consulta movimiento tipo VOL RISS y RISS subsidio                      --
--                 regresa origen, bimestre de pago y monto                               --
-- Fecha inicio => 26 julio de 2014                                                       --
-- Autor        => GERARDO ALFONSO VEGA PAREDES                                           --
--------------------------------------------------------------------------------------------


IMPORT FGL WSHelper

IMPORT com
IMPORT xml

DATABASE safre_viv

GLOBALS "PAGWS01.inc"

DEFINE g_arr_mov DYNAMIC ARRAY OF RECORD
	 origen   SMALLINT,  
	 periodo  CHAR(06),
	 monto    DECIMAL(12,2)
END RECORD


#-------------------------------------------------------------------------------
# Service: ConsultaMovimientosServicesService
# Port:    ConsultaMovimientosServices
#-------------------------------------------------------------------------------
#
# FUNCTION CreateCTAWS15Service
#   RETURNING soapstatus

MAIN
   
   DEFINE servicio  INTEGER
   DEFINE respuesta INTEGER 
   
   CALL CreateConsultaMovimientosServices() RETURNING servicio

   CALL com.WebServiceEngine.Start()

   DISPLAY("The server is listening.")

   WHILE TRUE
      #
      # Procesa cada request, regresa un entero que representa el estatus del request
      # el parametro -1 representa un valor infinito de espera
      #
      LET respuesta = com.WebServiceEngine.ProcessServices(-1)
      CASE respuesta
         WHEN 0
         WHEN -1
            DISPLAY "Timeout reached."
         WHEN -2
            DISPLAY "Disconnected from application server."
            EXIT PROGRAM   # The Application server has closed the connection
         WHEN -3
            DISPLAY "Client Connection lost."
         WHEN -4
            DISPLAY "Server interrupted with Ctrl-C."
         WHEN -10
            DISPLAY "Internal server error."
      END CASE

      IF int_flag<>0 THEN
         LET int_flag=0
         EXIT WHILE
      END IF     
   END WHILE
   
END MAIN
#

FUNCTION CreateConsultaMovimientosServices()
   DEFINE service   com.WebService
   DEFINE operation com.WebOperation
   
   TRY
      # Create Web Service
      LET service = com.WebService.CreateWebService("ConsultaCrezcamosServices","http://consultaMovimientos.efp.com")
      
      #
      # Operation: consultarMovimientos
      #
      
      # Publish Operation : consultarMovimientos      -- nom func q ellos ven  --nom func q atiende  --variable entrada     --variable de salida definida en inc
      LET operation = com.WebOperation.CreateDOCStyle("consultarMovimientos","consultarMovimientos",ns2movimientosRequest,ns2consultarMovimientosReturn)
      CALL service.publishOperation(operation,"")
      
      #
      # Register Service
      #
      CALL com.WebServiceEngine.RegisterService(service)
      RETURN 0

     CATCH
       RETURN STATUS
   END TRY

END FUNCTION


FUNCTION consultarMovimientos()

   DEFINE v_mes       DATE --Variable utilizada para la fecha que se utilizara por defult en caso de algúna fecha incongruente
   DEFINE f_inicio    DATE
   DEFINE f_fin       DATE 
   DEFINE v_query_nss STRING 
   DEFINE v_nss       CHAR(11) 
   
   LET v_mes=TODAY - 4 UNITS MONTH --Fecha por defult 

   --Consulta que busca el nss recibido 
   LET v_query_nss="Select nss from afi_derechohabiente where nss=?"

   PREPARE prp_nss FROM v_query_nss
   EXECUTE prp_nss USING ns2movimientosRequest.nss INTO v_nss
   
   INITIALIZE ns2consultarMovimientosReturn.* TO NULL

   --Se evalua que exista NSS
   IF v_nss IS NULL THEN --No existe NSS
      
      LET ns2consultarMovimientosReturn.codigoRespuesta="0"
      
   ELSE --Existe NSS
  
      IF ns2movimientosRequest.fFin IS NULL OR ns2movimientosRequest.finicio IS NULL THEN --Se valida que ambas fechas sean null
         LET ns2consultarMovimientosReturn.codigoRespuesta="1"--Error, fechas incongruentes      
      ELSE  
         IF ns2movimientosRequest.fFin IS NOT NULL AND ns2movimientosRequest.finicio IS NOT  NULL  THEN--Se valida que ambas fechas no sean null
            --Ambas fechas se tienen 
            IF ns2movimientosRequest.fInicio>ns2movimientosRequest.fFin or ns2movimientosRequest.fFin> TODAY THEN 
               LET ns2consultarMovimientosReturn.codigoRespuesta="1"--Error, fechas incongruentes
            ELSE 
               --La fecha es correcta, se realiza la consulta 
               CALL fn_consulta(ns2movimientosRequest.fInicio, ns2movimientosRequest.fFin, ns2movimientosRequest.nss)
            END if
             
         END IF
      
      END IF
      
   END IF
        
END FUNCTION 


FUNCTION fn_consulta(f_inicio,f_fin, p_nss)--Funcion que carga el record que serà regreasado por el servicio
   DEFINE f_inicio             DATE 
   DEFINE f_fin                DATE
   DEFINE p_nss                CHAR(11)
   DEFINE v_query_sp           STRING 
   DEFINE v_query_con          STRING 
   DEFINE v_cont               INTEGER 
   DEFINE v_id_derechohabiente DECIMAL(9,0)
   DEFINE v_query_id           STRING 

   LET v_query_id="SELECT id_derechohabiente
                   FROM   afi_derechohabiente
                   WHERE  nss=?"
                
   PREPARE prp_id FROM v_query_id
   EXECUTE prp_id USING p_nss INTO v_id_derechohabiente
        
   IF YEAR(f_inicio)!=YEAR(today) OR YEAR(f_fin)!=YEAR(today) THEN --Se revisa si la fecha pertence al año actual para realizar la elección de la
                                                                   --tabla a consultar
      --La fecha no pertenece al año actual  
      LET v_query_sp="execute procedure sp_gen_his_mov(?)" --Procedimiento que genera una tabla temporal con todos los movimientos realizados

      PREPARE prp_exeprocedure FROM v_query_sp             --por el derechohabiente
      EXECUTE prp_exeprocedure USING v_id_derechohabiente
 	   
 	  --Se ocupa la tabla genera por el procedimiento para recabar informacion de los movimientos del derechohabiente	
			
      LET v_query_con = "select 1, ",
                               " fn_bimestre_pago(det.periodo_pago), ",
                               " cta.monto_pesos ",
                         " from   tmp_movimiento cta, ",
                               " cta_his_pagos  det ",
                         " where  cta.id_derechohabiente = ? ",
                         " and    cta.id_derechohabiente = det.id_derechohabiente ",
                         " and    cta.folio_liquida = det.folio ",
                         " and    cta.id_referencia = det.id_referencia ",
                         " and    cta.subcuenta in (4,44,55) ",
                         " and    cta.movimiento in (761,771) ",
                         " and    cta.f_liquida between ? and ? ",
                         " UNION ALL ",
                         " select 2, ",
                                " fn_bimestre_pago(det.periodo_pago), ",
                                " cta.monto_pesos ",
                         " from   tmp_movimiento cta, ",
                                " cta_his_pagos  det ",
                         " where  cta.id_derechohabiente = ? ",
                         " and    cta.id_derechohabiente = det.id_derechohabiente ",
                         " and    cta.folio_liquida = det.folio ",
                         " and    cta.id_referencia = det.id_referencia ",
                         " and    cta.subcuenta in (4,44,55) ",
                         " and    cta.movimiento in (701,711) ",
                         " and    cta.f_liquida between ? and ? ",                        
                         " UNION ALL ",
                         " select 3, ",
                                " fn_bimestre_pago(det.periodo_pago), ",
                                " cta.monto_pesos ", 
                         " from   tmp_movimiento cta, ",
                         "        cta_his_pagos  det ",
                         " where  cta.id_derechohabiente = ? ",
                         " and    cta.id_derechohabiente = det.id_derechohabiente ",
                         " and    cta.folio_liquida = det.folio ",
                         " and    cta.id_referencia = det.id_referencia ",
                         " and    cta.subcuenta in (4,44,55) ",
                         " and    cta.movimiento in (731,741,751) ",
                         " and    cta.f_liquida between ? and ? ",                        
                         " UNION ALL ",
                         " select 4, ",
                                " fn_bimestre_pago(det.periodo_pago), ",
                                " cta.monto_pesos  ",
                         " from   tmp_movimiento cta, ",
                                " cta_his_pagos  det ",
                         " where  cta.id_derechohabiente = ? ",
                         " and    cta.id_derechohabiente = det.id_derechohabiente ",
                         " and    cta.folio_liquida = det.folio ",
                         " and    cta.id_referencia = det.id_referencia ",
                         " and    cta.subcuenta in (4,44,55) ",
                         " and    cta.movimiento in (781,791,801,811,821,831) ",
                         " and    cta.f_liquida between ? and ? ",
			                   " order  by 2 "

	  PREPARE prp_query from v_query_con
	  DECLARE cur_info CURSOR FOR prp_query
	  LET v_cont=1
      INITIALIZE g_arr_mov TO NULL
					
	  FOREACH cur_info USING v_id_derechohabiente,f_inicio,f_fin,
                             v_id_derechohabiente,f_inicio,f_fin,
                             v_id_derechohabiente,f_inicio,f_fin,
                             v_id_derechohabiente,f_inicio,f_fin    
         INTO g_arr_mov[v_cont].*
	     LET v_cont=v_cont + 1  
	  END FOREACH 
               
	  CALL fn_load_out()--Función que carga el arreglo de salida 
      
	  IF v_cont= 1 THEN --Evaluaciones para determinar como es el resultado de la consulta, se modifica el 
	     LET ns2consultarMovimientosReturn.codigoRespuesta="2"--código de respuesta deacuerdo a las evaluaciones
	     DISPLAY "No se encontraron movimientos"
	  END IF 
			
	  IF v_cont > 1 THEN
         DISPLAY "La consulta encontro movimientos"
	     LET ns2consultarMovimientosReturn.codigoRespuesta="3"
      END IF 
			
	  IF SQLCA.SQLCODE <0 THEN 
	     DISPLAY "Se produjo un error SQL"
      END IF            --Termino de evaluaciones

	  DROP TABLE tmp_movimiento 
                
   ELSE --Las fechas pertenecen al año actual, no se utiliza el procedimiento
      --Se utiliza la tabla de movimientos actual

      LET v_query_con = "select 1,
                                fn_bimestre_pago(det.periodo_pago),
                                cta.monto_pesos 
                         from   cta_movimiento cta,
                                cta_his_pagos  det
                         where  cta.id_derechohabiente = ?
                         and    cta.id_derechohabiente = det.id_derechohabiente
                         and    cta.folio_liquida = det.folio
                         and    cta.id_referencia = det.id_referencia
                         and    cta.subcuenta in (4,44,55)
                         and    cta.movimiento in (761,771)
                         and    cta.f_liquida between ? and ?
                         UNION ALL
                         select 2,
                                fn_bimestre_pago(det.periodo_pago),
                                cta.monto_pesos 
                         from   cta_movimiento cta,
                                cta_his_pagos  det
                         where  cta.id_derechohabiente = ?
                         and    cta.id_derechohabiente = det.id_derechohabiente
                         and    cta.folio_liquida = det.folio
                         and    cta.id_referencia = det.id_referencia
                         and    cta.subcuenta in (4,44,55)
                         and    cta.movimiento in (701,711)
                         and    cta.f_liquida between ? and ?                         
                         UNION ALL
                         select 3,
                                fn_bimestre_pago(det.periodo_pago),
                                cta.monto_pesos 
                         from   cta_movimiento cta,
                                cta_his_pagos  det
                         where  cta.id_derechohabiente = ?
                         and    cta.id_derechohabiente = det.id_derechohabiente
                         and    cta.folio_liquida = det.folio
                         and    cta.id_referencia = det.id_referencia
                         and    cta.subcuenta in (4,44,55)
                         and    cta.movimiento in (731,741,751)
                         and    cta.f_liquida between ? and ?                         
                         UNION ALL
                         select 4,
                                fn_bimestre_pago(det.periodo_pago),
                                cta.monto_pesos 
                         from   cta_movimiento cta,
                                cta_his_pagos  det
                         where  cta.id_derechohabiente = ?
                         and    cta.id_derechohabiente = det.id_derechohabiente
                         and    cta.folio_liquida = det.folio
                         and    cta.id_referencia = det.id_referencia
                         and    cta.subcuenta in (4,44,55)
                         and    cta.movimiento in (781,791,801,811,821,831)
                         and    cta.f_liquida between ? and ?                         
			                   order  by 2 "

	  PREPARE prp_query02 from v_query_con
	  DECLARE cur_info02 CURSOR FOR prp_query02
	  LET v_cont=1

      INITIALIZE g_arr_mov TO NULL

	  FOREACH cur_info02 USING v_id_derechohabiente,f_inicio,f_fin,
                               v_id_derechohabiente,f_inicio,f_fin,
                               v_id_derechohabiente,f_inicio,f_fin,
                               v_id_derechohabiente,f_inicio,f_fin    
         INTO g_arr_mov[v_cont].*
	     LET v_cont=v_cont + 1  
	  END FOREACH 
      
      CALL fn_load_out()
			
	  IF v_cont= 1 THEN --Evaluaciones de la conuslta para determinar cual se el codigo de respuesta
		 LET ns2consultarMovimientosReturn.codigoRespuesta="2"
		 DISPLAY "No se encontraron movimientos"
	  END IF 
			
      IF v_cont > 1 THEN
		 DISPLAY "La consulta encontro movimientos"
		 LET ns2consultarMovimientosReturn.codigoRespuesta="3"
	  END IF 
		
      IF SQLCA.SQLCODE <0 THEN 
		 DISPLAY "Se produjo un error SQL"
      END IF
                
	END IF 
        
END FUNCTION 


FUNCTION fn_calcula_fecha(p_num)--Funcion que recibe el número correspondiente al periodo de consulta y retorna la fecha inicio correspondiente
   
   DEFINE p_num    SMALLINT 
   DEFINE f_inicio DATE 
   
   CASE p_num
      WHEN 1
         LET f_inicio = TODAY - 1
      WHEN 2
         LET f_inicio = TODAY -7 
      WHEN 3
         LET f_inicio = TODAY -15 
      WHEN 4 
         LET f_inicio= TODAY - 1 UNITS MONTH 
      WHEN 5
         LET f_inicio= TODAY - 3 UNITS MONTH 
      WHEN 6 
         LET f_inicio= NULL 
   END CASE 
   
   RETURN f_inicio
   
END FUNCTION 


FUNCTION fn_load_out()--Función que carga el arreglo de salida evaluando el campo desc_ciudadana 
                      --si desc_ciudadana es null se utilizara el campo movimiento_desc la salida

   DEFINE v_cont     SMALLINT 
   
   CALL ns2consultarMovimientosReturn.movimientos.item.clear()

   FOR v_cont=1 TO g_arr_mov.getLength()
     
     LET ns2consultarMovimientosReturn.movimientos.item[v_cont].origen  = g_arr_mov[v_cont].origen
     LET ns2consultarMovimientosReturn.movimientos.item[v_cont].periodo = g_arr_mov[v_cont].periodo
     LET ns2consultarMovimientosReturn.movimientos.item[v_cont].monto   = g_arr_mov[v_cont].monto
     
   END FOR 

END FUNCTION 
