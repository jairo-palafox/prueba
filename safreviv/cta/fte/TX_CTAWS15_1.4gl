#-------------------------------------------------------------------------------
# File: CTAWS15Service.4gl
# GENERATED BY fglwsdl 101601
#-------------------------------------------------------------------------------
# THIS FILE WAS GENERATED. DO NOT MODIFY.
#-------------------------------------------------------------------------------

IMPORT FGL WSHelper

IMPORT com
IMPORT xml
DATABASE safre_viv

GLOBALS "CTAWS15.inc"



#-------------------------------------------------------------------------------
# Service: ConsultaMovimientosServicesService
# Port:    ConsultaMovimientosServices
#-------------------------------------------------------------------------------
#
# FUNCTION CreateCTAWS15Service
#   RETURNING soapstatus

MAIN
    DEFINE servicio     INTEGER
    DEFINE respuesta    INTEGER 
   
   CALL CreateConsultaMovimientosServices() RETURNING servicio

   CALL com.WebServiceEngine.Start()

   DISPLAY("The server is listening.")

   WHILE TRUE
      #
      # Procesa cada request, regresa un entero que representa el estatus del request
      # el parametro -1 representa un valor infinito de espera
      #
      LET respuesta = com.WebServiceEngine.ProcessServices(-1)
      CASE respuesta
         WHEN 0
         WHEN -1
            DISPLAY "Timeout reached."
         WHEN -2
            DISPLAY "Disconnected from application server."
            EXIT PROGRAM   # The Application server has closed the connection
         WHEN -3
            DISPLAY "Client Connection lost."
         WHEN -4
            DISPLAY "Server interrupted with Ctrl-C."
         WHEN -10
            DISPLAY "Internal server error."
     END CASE

     IF int_flag<>0 THEN
        LET int_flag=0
        EXIT WHILE
     END IF     
   END WHILE
END MAIN
#
FUNCTION CreateConsultaMovimientosServices()
  DEFINE service      com.WebService
  DEFINE operation    com.WebOperation

  TRY
    # Create Web Service
    LET service = com.WebService.CreateWebService("ConsultaMovimientosServices","http://consultaMovimientos.efp.com")


    #
    # Operation: consultarMovimientos
    #

    # Publish Operation : consultarMovimientos
    LET operation = com.WebOperation.CreateDOCStyle("consultarMovimientos","consultarMovimientos",ns2movimientosRequest,ns2consultarMovimientosReturn)
    CALL service.publishOperation(operation,"")


    #
    # Register Service
    #
    CALL com.WebServiceEngine.RegisterService(service)
    RETURN 0

  CATCH
    RETURN STATUS
  END TRY

  


END FUNCTION

FUNCTION consultarMovimientos()
 DEFINE v_mes       SMALLINT
 DEFINE f_inicio    DATE
 DEFINE f_fin       DATE 
 DEFINE v_mes_s     string

 LET v_mes=MONTH(TODAY) - 4


 
 IF ns2movimientosRequest.nss IS NULL THEN--Se evalua que exista NSS 
    --No existe NSS
    LET ns2consultarMovimientosReturn.codigoRespuesta="000"

    DISPLAY 1
 ELSE --Existe NSS
    
    IF ns2movimientosRequest.fFin IS null AND ns2movimientosRequest.fInicio IS NULL THEN --Se evalua si existe rango de fechas 
    --No existen fechas, el rango se toma desde el inicio del mes hasta el día de hoy(today), se realizan consultas   
        LET f_inicio=date(month(today)||"/"||"01"||"/"||year(today))
        LET f_fin=TODAY
        CALL fn_consulta(f_inicio,f_fin,ns2movimientosRequest.nss)--Funcion que reaiza la consulta y carga el record
        DISPLAY "Prueba"
     ELSE
        --Existen fechas
        
        IF ns2movimientosRequest.fFin IS NULL THEN--Se evalua que la fecha fin no sea null
            --Sólo se tiene fecha inicio 
            
            IF  ns2movimientosRequest.fInicio < date(v_mes||"/"||day(TODAY)||"/"||year(TODAY)) THEN -- se valida que no sea menor a 4 meses 
                 --El rango no es correcto, se envía código de error
                 LET ns2consultarMovimientosReturn.codigoRespuesta="001"
                    DISPLAY 2
            ELSE --El rango es correcto, se realizan las consultas con fecha inicio y today  
                CALL fn_consulta(ns2movimientosRequest.fInicio, today, ns2movimientosRequest.nss)
                DISPLAY 3
            END IF 
            
        END IF
        
        IF  ns2movimientosRequest.finicio IS NULL THEN--Se evalua que la fecha inico no sea null
        --Sólo tenemos fecha fin 
        
            IF  ns2movimientosRequest.fFin > TODAY THEN-- se valida que fecha fin no sea mayor a today 
                 --El rango es incorrecto, se envía código de error
                 LET ns2consultarMovimientosReturn.codigoRespuesta="001"
                 DISPLAY 4
            ELSE --El rango es correcto, se realizan las consultas con fecha fin y today-4 meses
                LET f_inicio=date(v_mes||"/"||day(today)||"/"||YEAR(today))
                 CALL fn_consulta(f_inicio,ns2movimientosRequest.fFin,ns2movimientosRequest.nss)--Funcion que reaiza la consulta y carga el record
                    DISPLAY 5
            END IF 
            
         END IF 

         IF ns2movimientosRequest.fFin IS NOT NULL AND ns2movimientosRequest.finicio IS NOT  NULL  THEN
                --Ambas fechas se tienen 
            IF ns2movimientosRequest.fInicio>ns2movimientosRequest.fFin {or ns2movimientosRequest.fInicio <date(v_mes||"/"||day(today)||"/"||YEAR(today))}
               or ns2movimientosRequest.fFin> TODAY THEN 
                 LET ns2consultarMovimientosReturn.codigoRespuesta="001"--Error, fechas incongruentes
                  DISPLAY 6
            ELSE 
                --La fecha es correcta, se realiza la consulta 
                CALL fn_consulta(ns2movimientosRequest.fInicio,ns2movimientosRequest.fFin,ns2movimientosRequest.nss)
                DISPLAY 7
            END if
            
         END if

    END IF

 END IF 

 
        
END FUNCTION 


FUNCTION fn_consulta(f_inicio,f_fin, p_nss)--Funcion que carga el record que serà regreasado por el servicio
    DEFINE f_inicio                 DATE 
    DEFINE f_fin                    DATE
    DEFINE p_nss                    char(11)
    DEFINE v_query_sp               STRING 
    DEFINE v_query_con              STRING 
    DEFINE v_cont                   INTEGER 
    DEFINE v_id_derechohabiente     DECIMAL(9,0)
    DEFINE v_nom_table              STRING --Se utilizara para contener el nombre de la tabla movimiento donde se realizara la consulta

    SELECT id_derechohabiente
        INTO v_id_derechohabiente
        FROM afi_derechohabiente
        WHERE nss=p_nss
    

     
    IF year(f_fin) != year(f_inicio) THEN 
    
                LET v_query_sp="execute procedure sp_gen_his_mov(?)"
                PREPARE prp_exeprocedure FROM v_query_sp
                EXECUTE prp_exeprocedure USING v_id_derechohabiente
                
                LET v_query_con=    "select cta.f_liquida, 
                                            cta.folio_liquida,
                                            cta.subcuenta,
                                            cta.movimiento,
                                            cta.monto_pesos,
                                            cta.origen
                                    from  tmp_movimiento cta 
                                    where cta.id_derechohabiente=? and
                                          cta.f_liquida between ? and ?
                                          order by cta.f_liquida,cta.folio_liquida "

                        PREPARE prp_query from v_query_con
                        DECLARE cur_info CURSOR FOR prp_query
                        LET v_cont=1
                        
                        FOREACH cur_info USING v_id_derechohabiente,f_inicio,f_fin INTO ns2consultarMovimientosReturn.movimientos.item[v_cont].*
                            
                            LET v_cont=v_cont + 1  
                           
                        END FOREACH 
                

                IF v_cont= 1 THEN 
                    LET ns2consultarMovimientosReturn.codigoRespuesta="003"
                    DISPLAY "No se encontraron movimientos"
                END IF 
                IF v_cont > 1 THEN
                    DISPLAY "La consulta encontro movimientos"
                    LET ns2consultarMovimientosReturn.codigoRespuesta="002"
                END IF 
                IF SQLCA.SQLCODE <0 THEN 
                    DISPLAY "Se produjo un error SQL"
                END if

                LET ns2consultarMovimientosReturn.nss=p_nss

                DROP TABLE   tmp_movimiento 
    ELSE 
            IF year(f_inicio)>= 2014 THEN 
                LET v_nom_table="cta_movimiento"
            ELSE 
                IF year(f_inicio)<=2012 THEN 
                    LET v_nom_table="cta_movimiento12"
                ELSE 
                    LET v_nomta
                END IF 
            END if
                LET v_query_con=    "select cta.f_liquida, 
                                            cta.folio_liquida,
                                            cta.subcuenta,
                                            cta.movimiento,
                                            cta.monto_pesos,
                                            cta.origen
                                    from  tmp_movimiento cta 
                                    where cta.id_derechohabiente=? and
                                          cta.f_liquida between ? and ?
                                          order by cta.f_liquida,cta.folio_liquida "

                        PREPARE prp_query from v_query_con
                        DECLARE cur_info CURSOR FOR prp_query
                        LET v_cont=1
                        
                        FOREACH cur_info USING v_id_derechohabiente,f_inicio,f_fin INTO ns2consultarMovimientosReturn.movimientos.item[v_cont].*
                            
                            LET v_cont=v_cont + 1  
                           
                        END FOREACH 
                

                IF v_cont= 1 THEN 
                    LET ns2consultarMovimientosReturn.codigoRespuesta="003"
                    DISPLAY "No se encontraron movimientos"
                END IF 
                IF v_cont > 1 THEN
                    DISPLAY "La consulta encontro movimientos"
                    LET ns2consultarMovimientosReturn.codigoRespuesta="002"
                END IF 
                IF SQLCA.SQLCODE <0 THEN 
                    DISPLAY "Se produjo un error SQL"
                END if

                LET ns2consultarMovimientosReturn.nss=p_nss

                DROP TABLE   tmp_movimiento


    END if
    
    
END FUNCTION 

